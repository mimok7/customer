'use client';
import { useState, useEffect } from 'react';
import { useParams, useRouter } from 'next/navigation';
import ManagerLayout from '@/components/ManagerLayout';
import supabase from '@/lib/supabase';

interface ReservationDetail {
    reservation_id: string;
    service_type: string;
    service_details: any;
    amount: number;
    status: string;
}

interface QuoteData {
    quote_id: string;
    title: string;
    user_name: string;
    user_email: string;
    user_phone: string;
    total_price: number;
    payment_status: string;
    created_at: string;
    reservations: ReservationDetail[];
}

export default function ManagerConfirmationGeneratePage() {
    const params = useParams();
    const router = useRouter();
    const quoteId = params.quote_id as string;

    // ÏòàÏïΩÏûê Í∂åÌïú Ï≤¥ÌÅ¨ (users.role === 'member')
    const [authChecked, setAuthChecked] = useState(false);
    const [isMember, setIsMember] = useState(false);

    useEffect(() => {
        const checkAuth = async () => {
            const { data: { user }, error } = await supabase.auth.getUser();
            if (error || !user) {
                alert('Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌï©ÎãàÎã§.');
                router.push('/login');
                return;
            }
            const { data: userData } = await supabase
                .from('users')
                .select('role')
                .eq('id', user.id)
                .single();
            if (userData?.role === 'member') {
                setIsMember(true);
            } else {
                alert('ÏòàÏïΩÏûêÎßå Ï†ëÍ∑º Í∞ÄÎä•Ìï©ÎãàÎã§.');
                router.push('/');
            }
            setAuthChecked(true);
        };
        checkAuth();
    }, []);

    if (!authChecked) {
        return (
            <div className="flex justify-center items-center h-64">
                <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
                <p className="ml-4 text-gray-600">Í∂åÌïú ÌôïÏù∏ Ï§ë...</p>
            </div>
        );
    }
    if (!isMember) {
        return null;
    }

    const [quoteData, setQuoteData] = useState<QuoteData | null>(null);
    const [loading, setLoading] = useState(true);
    const [generating, setGenerating] = useState(false);
    const [emailSending, setEmailSending] = useState(false);

    // ÏÑúÎπÑÏä§ ÌÉÄÏûÖÏùÑ ÌïúÍ∏ÄÎ°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
    const getServiceName = (type: string): string => {
        const names: Record<string, string> = {
            cruise: 'üö¢ ÌÅ¨Î£®Ï¶à',
            cruise_car: 'üöó ÌÅ¨Î£®Ï¶à Ï∞®Îüâ',
            airport: '‚úàÔ∏è Í≥µÌï≠ ÏÑúÎπÑÏä§',
            hotel: 'üè® Ìò∏ÌÖî',
            tour: 'üéØ Ìà¨Ïñ¥',
            rentcar: 'üöô Î†åÌÑ∞Ïπ¥',
            sht: 'üöê SHT Ï∞®Îüâ'
        };
        return names[type] || type;
    };


    useEffect(() => {
        if (quoteId) {
            loadQuoteOrReservationData();
        }
    }, [quoteId]);

    // Í≤¨Ï†ÅÏù¥ ÏóÜÏúºÎ©¥ ÏòàÏïΩÎßåÏúºÎ°úÎèÑ ÌôïÏù∏ÏÑú ÏÉùÏÑ±
    const loadQuoteOrReservationData = async () => {
        try {
            setLoading(true);
            // 1. Í≤¨Ï†Å Ïö∞ÏÑ† Ï°∞Ìöå
            let quote: any | null = null;
            let quoteError: any = null;
            {
                const { data, error } = await supabase
                    .from('quote')
                    .select('*')
                    .eq('id', quoteId)
                    .single();
                if (!error && data) {
                    quote = data;
                } else {
                    const { data: q2, error: e2 } = await supabase
                        .from('quote')
                        .select('*')
                        .eq('quote_id', quoteId)
                        .single();
                    if (!e2 && q2) {
                        quote = q2;
                    } else {
                        quoteError = e2 || error;
                    }
                }
            }

            if (quote) {
                // Í∏∞Ï°¥ Í≤¨Ï†Å Í∏∞Î∞ò Î°úÏßÅ (Í∏∞Ï°¥ ÏΩîÎìú Í∑∏ÎåÄÎ°ú)
                // ...existing code for quote (ÏÉùÎûµ, ÏúÑ ÏΩîÎìú Í∑∏ÎåÄÎ°ú)...
                // (ÏïÑÎûò Í∏∞Ï°¥ ÏΩîÎìú Î≥µÏÇ¨)
                // ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå
                const { data: userInfo } = await supabase
                    .from('users')
                    .select('name, email, phone_number')
                    .eq('id', quote.user_id)
                    .single();

                // ÏòàÏïΩ Í∏∞Î≥∏ Ï†ïÎ≥¥ Ï°∞Ìöå
                const { data: reservationList } = await supabase
                    .from('reservation')
                    .select('re_id, re_type, re_status')
                    .eq('re_quote_id', quoteId);

                const resList = reservationList || [];
                console.log('üîç Ï°∞ÌöåÎêú ÏòàÏïΩ Î™©Î°ù:', resList);

                const idsByType = {
                    cruise: resList.filter(r => r.re_type === 'cruise').map(r => r.re_id),
                    airport: resList.filter(r => r.re_type === 'airport').map(r => r.re_id),
                    hotel: resList.filter(r => r.re_type === 'hotel').map(r => r.re_id),
                    rentcar: resList.filter(r => r.re_type === 'rentcar').map(r => r.re_id),
                    tour: resList.filter(r => r.re_type === 'tour').map(r => r.re_id),
                    sht: resList.filter(r => r.re_type === 'sht').map(r => r.re_id)
                } as const;

                console.log('üìä ÏÑúÎπÑÏä§ ÌÉÄÏûÖÎ≥Ñ ÏòàÏïΩ ID:', idsByType);

                // ÏÉÅÏÑ∏ ÌÖåÏù¥Î∏î Î≥ëÎ†¨ Ï°∞Ìöå - ÌÅ¨Î£®Ï¶à ÏòàÏïΩÏóêÏÑú Í∞ùÏã§Í≥º Ï∞®Îüâ Î™®Îëê Ï°∞Ìöå
                const reservationIds = resList.map(r => r.re_id);
                const [cruiseRows, cruiseCarRows, airportRows, hotelRows, rentcarRows, tourRows, shtRows] = await Promise.all([
                    reservationIds.length ? supabase.from('reservation_cruise').select(`*`).in('reservation_id', reservationIds) : Promise.resolve({ data: [] }),
                    reservationIds.length ? supabase.from('reservation_cruise_car').select(`*`).in('reservation_id', reservationIds) : Promise.resolve({ data: [] }),
                    idsByType.airport.length ? supabase.from('reservation_airport').select('*').in('reservation_id', idsByType.airport) : Promise.resolve({ data: [] }),
                    idsByType.hotel.length ? supabase.from('reservation_hotel').select('*').in('reservation_id', idsByType.hotel) : Promise.resolve({ data: [] }),
                    idsByType.rentcar.length ? supabase.from('reservation_rentcar').select('*').in('reservation_id', idsByType.rentcar) : Promise.resolve({ data: [] }),
                    idsByType.tour.length ? supabase.from('reservation_tour').select('*').in('reservation_id', idsByType.tour) : Promise.resolve({ data: [] }),
                    idsByType.sht.length ? supabase.from('reservation_car_sht').select('*').in('reservation_id', idsByType.sht) : Promise.resolve({ data: [] })
                ] as any);

                // PaymentDetailModal Ìå®ÌÑ¥ÏúºÎ°ú Í∞ÄÍ≤© Ï†ïÎ≥¥ Ï°∞Ìöå
                const enrichDataWithPrices = async (data: any[], serviceType: string) => {
                    if (!data || data.length === 0) return [];

                    return await Promise.all(
                        data.map(async (item) => {
                            let priceData = null;
                            switch (serviceType) {
                                case 'cruise':
                                    if (item.room_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('room_price')
                                            .select('*')
                                            .eq('room_code', item.room_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                                case 'cruise_car':
                                    if (item.car_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('car_price')
                                            .select('*')
                                            .eq('car_code', item.car_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                                case 'airport':
                                    if (item.airport_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('airport_price')
                                            .select('*')
                                            .eq('airport_code', item.airport_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                                case 'hotel':
                                    if (item.hotel_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('hotel_price')
                                            .select('*')
                                            .eq('hotel_code', item.hotel_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                                case 'tour':
                                    if (item.tour_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('tour_price')
                                            .select('*')
                                            .eq('tour_code', item.tour_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                                case 'rentcar':
                                    if (item.rentcar_price_code) {
                                        const { data: priceInfo } = await supabase
                                            .from('rent_price')
                                            .select('*')
                                            .eq('rent_code', item.rentcar_price_code)
                                            .single();
                                        priceData = priceInfo;
                                    }
                                    break;
                            }
                            return { ...item, price_info: priceData };
                        })
                    );
                };

                // Í∞Å ÏÑúÎπÑÏä§Î≥ÑÎ°ú Í∞ÄÍ≤© Ï†ïÎ≥¥ Ï°∞Ìöå - PaymentDetailModalÍ≥º ÎèôÏùºÌïú Î∞©Ïãù
                const enrichedCruiseData = await enrichDataWithPrices((cruiseRows as any).data, 'cruise');
                const enrichedCruiseCarData = await enrichDataWithPrices((cruiseCarRows as any).data, 'cruise_car');
                const enrichedAirportData = await enrichDataWithPrices((airportRows as any).data, 'airport');
                const enrichedHotelData = await enrichDataWithPrices((hotelRows as any).data, 'hotel');
                const enrichedTourData = await enrichDataWithPrices((tourRows as any).data, 'tour');
                const enrichedRentcarData = await enrichDataWithPrices((rentcarRows as any).data, 'rentcar');

                // ÌÅ¨Î£®Ï¶àÎäî Ìïú ÏòàÏïΩÏóê Ïó¨Îü¨ Í∞ùÏã§Ïù¥ ÏûàÏùÑ Ïàò ÏûàÏúºÎØÄÎ°ú Î∞∞Ïó¥Î°ú Í∑∏Î£πÌôî
                const mapByArray = (rows: any[] | null | undefined) => {
                    const m = new Map<string, any[]>();
                    for (const r of rows || []) {
                        if (r?.reservation_id) {
                            if (!m.has(r.reservation_id)) {
                                m.set(r.reservation_id, []);
                            }
                            m.get(r.reservation_id)!.push(r);
                        }
                    }
                    return m;
                };

                // Îã®Ïùº Í∞ùÏ≤¥Î°ú Îß§Ìïë (Í∏∞ÌÉÄ ÏÑúÎπÑÏä§Ïö©)
                const mapBy = (rows: any[] | null | undefined) => {
                    const m = new Map<string, any>();
                    for (const r of rows || []) if (r?.reservation_id) m.set(r.reservation_id, r);
                    return m;
                };

                // ÌÅ¨Î£®Ï¶àÏôÄ ÌÅ¨Î£®Ï¶à Ï∞®ÎüâÏùÄ Î∞∞Ïó¥Î°ú, ÎÇòÎ®∏ÏßÄÎäî Îã®Ïùº Í∞ùÏ≤¥Î°ú Îß§Ìïë - Í∞ÄÍ≤© Ï†ïÎ≥¥ Ìè¨Ìï®Îêú Îç∞Ïù¥ÌÑ∞ ÏÇ¨Ïö©
                const cruiseArrayMap = mapByArray(enrichedCruiseData);
                const cruiseCarArrayMap = mapByArray(enrichedCruiseCarData);
                const airportMap = mapBy(enrichedAirportData);
                const hotelMap = mapBy(enrichedHotelData);
                const rentcarMap = mapBy(enrichedRentcarData);
                const tourMap = mapBy(enrichedTourData);
                const shtMap = mapBy((shtRows as any).data);

                const pickAmount = (type: string, detail: any): number => {
                    if (!detail) return 0;
                    const tryFields = {
                        cruise: ['room_total_price', 'total_price', 'price', 'amount'],
                        cruise_car: ['car_total_price', 'total_price', 'price', 'amount'],
                        airport: ['total_price', 'unit_price', 'price', 'amount'], // DBÏóêÎäî total_price Ïª¨Îüº Ï°¥Ïû¨
                        hotel: ['total_price', 'unit_price', 'price', 'amount'], // DBÏóêÎäî total_price Ïª¨Îüº Ï°¥Ïû¨
                        rentcar: ['total_price', 'unit_price', 'price', 'amount'], // DBÏóêÎäî total_price Ïª¨Îüº Ï°¥Ïû¨
                        tour: ['total_price', 'unit_price', 'price', 'amount'], // DBÏóêÎäî total_price Ïª¨Îüº Ï°¥Ïû¨
                        sht: ['total_price', 'unit_price', 'price', 'amount'] // reservation_car_sht ÌÖåÏù¥Î∏î
                    } as Record<string, string[]>;
                    for (const f of (tryFields[type] || [])) {
                        const v = detail[f];
                        if (typeof v === 'number' && !isNaN(v)) return v;
                    }
                    return 0;
                };

                // ÌÅ¨Î£®Ï¶àÏùò Í≤ΩÏö∞ Ï¥ù Í∞ÄÍ≤© Í≥ÑÏÇ∞ (Ïó¨Îü¨ Í∞ùÏã§Ïùò Ìï©Í≥Ñ)
                const calculateCruiseTotalAmount = (cruiseDetails: any[]): number => {
                    if (!cruiseDetails || cruiseDetails.length === 0) return 0;
                    return cruiseDetails.reduce((sum, detail) => {
                        const amount = pickAmount('cruise', detail);
                        return sum + amount;
                    }, 0);
                };

                // Î™®Îì† ÏÑúÎπÑÏä§ Ï≤òÎ¶¨ - Í∞Å ÏòàÏïΩÏùÑ Í∞úÎ≥Ñ ÏÑúÎπÑÏä§Î°ú ÌëúÏãú
                const processedReservations: ReservationDetail[] = [];

                // ÌÅ¨Î£®Ï¶à ÏòàÏïΩÎì§ÏùÑ Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'cruise')) {
                    const cruiseDetails = enrichedCruiseData.filter(c => c.reservation_id === res.re_id);
                    if (cruiseDetails.length > 0) {
                        // Í∞Å ÌÅ¨Î£®Ï¶à Í∞ùÏã§ÏùÑ Í∞úÎ≥Ñ ÏÑúÎπÑÏä§Î°ú Ï∂îÍ∞Ä
                        cruiseDetails.forEach((cruise, index) => {
                            const amount = cruise.room_total_price || 0;
                            processedReservations.push({
                                reservation_id: `${res.re_id}_cruise_${index}`,
                                service_type: 'cruise',
                                service_details: {
                                    ...cruise,
                                    price_info: cruise.price_info
                                },
                                amount: amount,
                                status: res.re_status
                            });
                        });
                    }
                }

                // ÌÅ¨Î£®Ï¶à Ï∞®Îüâ ÏòàÏïΩÎì§ÏùÑ Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú Ï≤òÎ¶¨ - ÌÅ¨Î£®Ï¶à ÏòàÏïΩÍ≥º Ïó∞Í≤∞Îêú Ï∞®ÎüâÎì§
                for (const res of resList.filter(r => r.re_type === 'cruise')) {
                    const cruiseCarDetails = enrichedCruiseCarData.filter(c => c.reservation_id === res.re_id);
                    if (cruiseCarDetails.length > 0) {
                        // Í∞Å ÌÅ¨Î£®Ï¶à Ï∞®ÎüâÏùÑ Í∞úÎ≥Ñ ÏÑúÎπÑÏä§Î°ú Ï∂îÍ∞Ä
                        cruiseCarDetails.forEach((car, index) => {
                            const amount = car.car_total_price || 0;
                            processedReservations.push({
                                reservation_id: `${res.re_id}_car_${index}`,
                                service_type: 'cruise_car',
                                service_details: {
                                    ...car,
                                    price_info: car.price_info
                                },
                                amount: amount,
                                status: res.re_status
                            });
                        });
                    }
                }

                // Í≥µÌï≠ ÏÑúÎπÑÏä§ Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'airport')) {
                    const airportDetail = enrichedAirportData.find(a => a.reservation_id === res.re_id);
                    if (airportDetail) {
                        const amount = airportDetail.total_price || 0;
                        processedReservations.push({
                            reservation_id: res.re_id,
                            service_type: 'airport',
                            service_details: {
                                ...airportDetail,
                                price_info: airportDetail.price_info
                            },
                            amount: amount,
                            status: res.re_status
                        });
                    }
                }

                // Ìò∏ÌÖî ÏÑúÎπÑÏä§ Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'hotel')) {
                    const hotelDetail = enrichedHotelData.find(h => h.reservation_id === res.re_id);
                    if (hotelDetail) {
                        const amount = hotelDetail.total_price || 0;
                        processedReservations.push({
                            reservation_id: res.re_id,
                            service_type: 'hotel',
                            service_details: {
                                ...hotelDetail,
                                price_info: hotelDetail.price_info
                            },
                            amount: amount,
                            status: res.re_status
                        });
                    }
                }

                // Î†åÌÑ∞Ïπ¥ ÏÑúÎπÑÏä§ Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'rentcar')) {
                    const rentcarDetail = enrichedRentcarData.find(r => r.reservation_id === res.re_id);
                    if (rentcarDetail) {
                        const amount = rentcarDetail.total_price || 0;
                        processedReservations.push({
                            reservation_id: res.re_id,
                            service_type: 'rentcar',
                            service_details: {
                                ...rentcarDetail,
                                price_info: rentcarDetail.price_info
                            },
                            amount: amount,
                            status: res.re_status
                        });
                    }
                }

                // Ìà¨Ïñ¥ ÏÑúÎπÑÏä§ Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'tour')) {
                    const tourDetail = enrichedTourData.find(t => t.reservation_id === res.re_id);
                    if (tourDetail) {
                        const amount = tourDetail.total_price || 0;
                        processedReservations.push({
                            reservation_id: res.re_id,
                            service_type: 'tour',
                            service_details: {
                                ...tourDetail,
                                price_info: tourDetail.price_info
                            },
                            amount: amount,
                            status: res.re_status
                        });
                    }
                }

                // SHT Ï∞®Îüâ ÏÑúÎπÑÏä§ Ï≤òÎ¶¨
                for (const res of resList.filter(r => r.re_type === 'sht')) {
                    const shtDetail = shtMap.get(res.re_id);
                    if (shtDetail) {
                        const amount = shtDetail.total_price || 0;
                        processedReservations.push({
                            reservation_id: res.re_id,
                            service_type: 'sht',
                            service_details: shtDetail,
                            amount: amount,
                            status: res.re_status
                        });
                    }
                    console.log('‚úÖ ÏµúÏ¢Ö Ï≤òÎ¶¨Îêú ÏòàÏïΩ Î™©Î°ù:', processedReservations);

                    // Ï¥ù Í∏àÏï° Í≥ÑÏÇ∞ - Î™®Îì† Í∞úÎ≥Ñ ÏÑúÎπÑÏä§Ïùò Í∏àÏï° Ìï©ÏÇ∞
                    const calculatedTotalPrice = processedReservations.reduce((sum, reservation) => {
                        return sum + (reservation.amount || 0);
                    }, 0);

                    console.log('üí∞ Í≥ÑÏÇ∞Îêú Ï¥ù Í∏àÏï°:', calculatedTotalPrice);

                    setQuoteData({
                        quote_id: quote.quote_id || quote.id,
                        title: quote.title || 'Ï†úÎ™© ÏóÜÏùå',
                        user_name: userInfo?.name || 'Ïïå Ïàò ÏóÜÏùå',
                        user_email: userInfo?.email || '',
                        user_phone: userInfo?.phone_number || '',
                        total_price: calculatedTotalPrice, // Í≥ÑÏÇ∞Îêú Ï¥ù Í∏àÏï° ÏÇ¨Ïö©
                        payment_status: quote.payment_status || 'pending',
                        created_at: quote.created_at,
                        reservations: processedReservations
                    });
                    setLoading(false);
                    return;
                }
                setLoading(false);
                return;
            }

            // 2. Í≤¨Ï†ÅÏù¥ ÏóÜÏúºÎ©¥ ÏòàÏïΩ Îã®ÏùºÍ±¥ÏúºÎ°ú ÌôïÏù∏ÏÑú ÏÉùÏÑ±
            const { data: reservation, error: resError } = await supabase
                .from('reservation')
                .select('*')
                .eq('re_id', quoteId)
                .single();
            if (!reservation || resError) {
                alert('ÏòàÏïΩ/Í≤¨Ï†Å Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
                setLoading(false);
                return;
            }
            // ÏòàÏïΩ Í∏∞Î∞ò ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥
            let userInfo2 = null;
            if (reservation.re_user_id) {
                const { data: userData } = await supabase
                    .from('users')
                    .select('name, email, phone_number')
                    .eq('id', reservation.re_user_id)
                    .single();
                userInfo2 = userData;
            }
            // ÏÑúÎπÑÏä§Î≥Ñ ÏÉÅÏÑ∏ Ï†ïÎ≥¥
            let serviceDetail = null;
            let cruiseCarDetail = null;
            if (reservation.re_type === 'cruise') {
                const { data } = await supabase.from('reservation_cruise').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;

                // ÌÅ¨Î£®Ï¶à Ï∞®ÎüâÎèÑ Ìï®Íªò Ï°∞Ìöå
                const { data: carData } = await supabase.from('reservation_cruise_car').select('*').eq('reservation_id', reservation.re_id).single();
                cruiseCarDetail = carData;
            } else if (reservation.re_type === 'airport') {
                const { data } = await supabase.from('reservation_airport').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;
            } else if (reservation.re_type === 'hotel') {
                const { data } = await supabase.from('reservation_hotel').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;
            } else if (reservation.re_type === 'rentcar') {
                const { data } = await supabase.from('reservation_rentcar').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;
            } else if (reservation.re_type === 'tour') {
                const { data } = await supabase.from('reservation_tour').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;
            } else if (reservation.re_type === 'car') {
                const { data } = await supabase.from('reservation_car_sht').select('*').eq('reservation_id', reservation.re_id).single();
                serviceDetail = data;
            }
            // Í≤∞Ï†ú Ï†ïÎ≥¥
            let paymentStatus = '';
            let totalPrice = 0;
            const { data: payment } = await supabase
                .from('reservation_payment')
                .select('payment_status, amount')
                .eq('reservation_id', reservation.re_id)
                .order('created_at', { ascending: false })
                .limit(1)
                .single();
            if (payment) {
                paymentStatus = payment.payment_status;
                totalPrice = payment.amount;
            } else if (serviceDetail?.total_price) {
                totalPrice = serviceDetail.total_price;
            }

            // ÌÅ¨Î£®Ï¶à Ï∞®Îüâ Í∏àÏï°ÎèÑ Ìè¨Ìï®
            let carTotalPrice = 0;
            if (cruiseCarDetail?.car_total_price) {
                carTotalPrice = cruiseCarDetail.car_total_price;
            }

            const reservationItems = [
                {
                    reservation_id: reservation.re_id,
                    service_type: reservation.re_type,
                    service_details: serviceDetail,
                    amount: totalPrice,
                    status: reservation.re_status,
                }
            ];

            // ÌÅ¨Î£®Ï¶à Ï∞®ÎüâÏù¥ ÏûàÏúºÎ©¥ Ï∂îÍ∞Ä
            if (cruiseCarDetail) {
                reservationItems.push({
                    reservation_id: reservation.re_id + '_car',
                    service_type: 'cruise_car',
                    service_details: cruiseCarDetail,
                    amount: carTotalPrice,
                    status: reservation.re_status,
                });
            }

            setQuoteData({
                quote_id: reservation.re_id,
                title: serviceDetail?.title || 'ÏòàÏïΩÌôïÏù∏ÏÑú',
                user_name: userInfo2?.name || '',
                user_email: userInfo2?.email || '',
                user_phone: userInfo2?.phone_number || '',
                total_price: totalPrice + carTotalPrice,
                payment_status: paymentStatus,
                created_at: reservation.re_created_at,
                reservations: reservationItems
            });
        } catch (error) {
            console.error('ÏòàÏïΩ/Í≤¨Ï†Å Îç∞Ïù¥ÌÑ∞ Î°úÎìú Ïã§Ìå®:', error);
            alert('ÏòàÏïΩ/Í≤¨Ï†Å Ï†ïÎ≥¥Î•º Î∂àÎü¨Ïò¨ Ïàò ÏóÜÏäµÎãàÎã§.');
        } finally {
            setLoading(false);
        }
    };

    const generatePdfConfirmation = async () => {
        if (!quoteData) return;

        try {
            setGenerating(true);

            // html2pdf ÎèôÏ†Å ÏûÑÌè¨Ìä∏
            const html2pdf = (await import('html2pdf.js')).default;

            const element = document.getElementById('confirmation-letter');
            const opt = {
                margin: 1,
                filename: `ÏòàÏïΩÌôïÏù∏ÏÑú_${quoteData.quote_id}_${quoteData.user_name}.pdf`,
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2 },
                jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' }
            };

            await html2pdf().set(opt).from(element).save();

            alert('ÏòàÏïΩÌôïÏù∏ÏÑúÍ∞Ä ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§.');
        } catch (error) {
            console.error('PDF ÏÉùÏÑ± Ïã§Ìå®:', error);
            alert('PDF ÏÉùÏÑ±Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        } finally {
            setGenerating(false);
        }
    };

    const printConfirmation = () => {
        const printContent = document.getElementById('confirmation-letter');
        const windowPrint = window.open('', '', 'width=800,height=600');

        if (windowPrint && printContent) {
            windowPrint.document.write(`
        <html>
          <head>
            <title>ÏòàÏïΩÌôïÏù∏ÏÑú</title>
            <style>
              body { font-family: Arial, sans-serif; padding: 20px; }
              .text-center { text-align: center; }
              .font-bold { font-weight: bold; }
              .mb-4 { margin-bottom: 1rem; }
              .border-b { border-bottom: 1px solid #ccc; padding-bottom: 0.5rem; }
              .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; }
              .space-y-2 > * { margin-bottom: 0.5rem; }
              .bg-gray-50 { background-color: #f9f9f9; padding: 1rem; border-radius: 0.5rem; }
              .text-blue-600 { color: #2563eb; }
              .text-gray-600 { color: #4b5563; }
              .border-t { border-top: 1px solid #ccc; padding-top: 1rem; margin-top: 1rem; }
            </style>
          </head>
          <body>
            ${printContent.innerHTML}
          </body>
        </html>
      `);
            windowPrint.document.close();
            windowPrint.print();
            windowPrint.close();
        }
    };

    const sendEmailConfirmation = async () => {
        if (!quoteData) return;

        try {
            setEmailSending(true);

            // PDF ÏÉùÏÑ±
            const html2pdf = (await import('html2pdf.js')).default;
            const element = document.getElementById('confirmation-letter');

            if (!element) {
                throw new Error('ÌôïÏù∏ÏÑú ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
            }

            const opt = {
                margin: 0.5,
                filename: `ÏòàÏïΩÌôïÏù∏ÏÑú_${quoteData.quote_id}_${quoteData.user_name}.pdf`,
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: {
                    scale: 2,
                    useCORS: true,
                    letterRendering: true
                },
                jsPDF: {
                    unit: 'in',
                    format: 'a4',
                    orientation: 'portrait'
                }
            };

            // PDFÎ•º BlobÏúºÎ°ú ÏÉùÏÑ±
            const pdfBlob = await html2pdf().set(opt).from(element).outputPdf('blob');

            // Ïù¥Î©îÏùº Î∞úÏÜ° Îç∞Ïù¥ÌÑ∞ Ï§ÄÎπÑ
            const emailData = {
                to: quoteData.user_email,
                subject: `[Ïä§ÌÖåÏù¥ÌïòÎ°± Ìä∏Î†àÎ∏î] ÏòàÏïΩÌôïÏù∏ÏÑú - ${quoteData.title}`,
                html: `
                    <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                        <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center; color: white;">
                            <h1 style="margin: 0; font-size: 28px;">üéØ ÏòàÏïΩÌôïÏù∏ÏÑú</h1>
                            <p style="margin: 10px 0 0 0; font-size: 18px;">Ïä§ÌÖåÏù¥ÌïòÎ°± Ìä∏Î†àÎ∏î</p>
                        </div>
                        
                        <div style="padding: 30px; background: #ffffff;">
                            <h2 style="color: #333; margin-bottom: 20px;">ÏïàÎÖïÌïòÏÑ∏Ïöî, ${quoteData.user_name}Îãò! üëã</h2>
                            
                            <p style="color: #666; line-height: 1.6; margin-bottom: 20px;">
                                <strong>${quoteData.title}</strong> ÏòàÏïΩÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.<br/>
                                Î≤†Ìä∏ÎÇ® ÌïòÎ°±Î≤†Ïù¥ÏóêÏÑúÏùò ÌäπÎ≥ÑÌïú Ïó¨ÌñâÏùÑ Ï§ÄÎπÑÌï¥Î≥¥ÏÑ∏Ïöî!
                            </p>
                            
                            <div style="background: #f8f9fa; border-radius: 10px; padding: 20px; margin: 20px 0;">
                                <h3 style="color: #495057; margin-top: 0;">üìã ÏòàÏïΩ Ï†ïÎ≥¥</h3>
                                <ul style="color: #6c757d; list-style: none; padding: 0;">
                                    <li style="margin-bottom: 8px;"><strong>ÏòàÏïΩÎ≤àÌò∏:</strong> ${quoteData.quote_id}</li>
                                    <li style="margin-bottom: 8px;"><strong>ÏòàÏïΩÎ™Ö:</strong> ${quoteData.title}</li>
                                    <li style="margin-bottom: 8px;"><strong>Ï¥ù Í∏àÏï°:</strong> <span style="color: #007bff; font-weight: bold;">${quoteData.total_price.toLocaleString()}Îèô</span></li>
                                    <li style="margin-bottom: 8px;"><strong>ÏòàÏïΩÏùº:</strong> ${formatDate(quoteData.created_at)}</li>
                                    <li><strong>ÏÉÅÌÉú:</strong> <span style="color: #28a745; font-weight: bold;">‚úÖ Í≤∞Ï†úÏôÑÎ£å</span></li>
                                </ul>
                            </div>
                            
                            <div style="background: #e3f2fd; border-radius: 10px; padding: 20px; margin: 20px 0;">
                                <h3 style="color: #1976d2; margin-top: 0;">üéí Ïó¨Ìñâ Ï§ÄÎπÑÏÇ¨Ìï≠</h3>
                                <ul style="color: #1565c0; margin: 0;">
                                    <li>Ïó¨Í∂å (Ïú†Ìö®Í∏∞Í∞Ñ 6Í∞úÏõî Ïù¥ÏÉÅ)</li>
                                    <li>Ï≤®Î∂ÄÎêú ÏòàÏïΩÌôïÏù∏ÏÑú Ï∂úÎ†•Î≥∏</li>
                                    <li>Ïó¨ÌñâÏûêÎ≥¥Ìóò Í∞ÄÏûÖ Í∂åÏû•</li>
                                    <li>Ìé∏ÏïàÌïú Î≥µÏû• Î∞è Ïö¥ÎèôÌôî</li>
                                </ul>
                            </div>
                            
                            <div style="background: #fff3cd; border-radius: 10px; padding: 20px; margin: 20px 0;">
                                <h3 style="color: #856404; margin-top: 0;">‚ö†Ô∏è Ï§ëÏöî ÏïàÎÇ¥</h3>
                                <ul style="color: #856404; margin: 0;">
                                    <li>Ïó¨Ìñâ 3Ïùº Ï†ÑÍπåÏßÄ Î≥ÄÍ≤Ω/Ï∑®ÏÜå Í∞ÄÎä•</li>
                                    <li>ÎÇ†Ïî®Ïóê Îî∞Îùº ÏùºÏ†ïÏù¥ Î≥ÄÍ≤ΩÎê† Ïàò ÏûàÏäµÎãàÎã§</li>
                                    <li>Ï∂úÎ∞ú 30Î∂Ñ Ï†Ñ ÏßëÍ≤∞ ÏôÑÎ£å</li>
                                    <li>Í∑ÄÏ§ëÌíà Í¥ÄÎ¶¨Ïóê Ï£ºÏùòÌï¥Ï£ºÏÑ∏Ïöî</li>
                                </ul>
                            </div>
                            
                            <div style="text-align: center; margin: 30px 0;">
                                <p style="color: #666; margin-bottom: 15px;">Î¨∏ÏùòÏÇ¨Ìï≠Ïù¥ ÏûàÏúºÏãúÎ©¥ Ïñ∏Ï†úÎì† Ïó∞ÎùΩÏ£ºÏÑ∏Ïöî!</p>
                                <div style="background: #f8f9fa; border-radius: 10px; padding: 15px; display: inline-block;">
                                    <p style="margin: 0; color: #495057;"><strong>üìû Í≥†Í∞ùÏÑºÌÑ∞:</strong> 1588-1234</p>
                                    <p style="margin: 5px 0 0 0; color: #495057;"><strong>üìß Ïù¥Î©îÏùº:</strong> support@stayhalong.com</p>
                                </div>
                            </div>
                        </div>
                        
                        <div style="background: #6c757d; padding: 20px; text-align: center; color: white;">
                            <p style="margin: 0; font-size: 16px;">üåä Ïä§ÌÖåÏù¥ÌïòÎ°± Ìä∏Î†àÎ∏î üåä</p>
                            <p style="margin: 5px 0 0 0; font-size: 12px; opacity: 0.8;">Î≤†Ìä∏ÎÇ® ÌïòÎ°±Î≤†Ïù¥ Ï†ÑÎ¨∏ Ïó¨ÌñâÏÇ¨</p>
                        </div>
                    </div>
                `,
                attachments: [
                    {
                        filename: `ÏòàÏïΩÌôïÏù∏ÏÑú_${quoteData.quote_id}_${quoteData.user_name}.pdf`,
                        content: pdfBlob
                    }
                ]
            };

            // Ïã§Ï†ú Ïù¥Î©îÏùº Î∞úÏÜ° API Ìò∏Ï∂ú (Íµ¨ÌòÑ ÌïÑÏöî)
            // const response = await fetch('/api/send-email', {
            //     method: 'POST',
            //     headers: { 'Content-Type': 'application/json' },
            //     body: JSON.stringify(emailData)
            // });

            // ÏãúÎÆ¨Î†àÏù¥ÏÖò
            console.log('üìß Ïù¥Î©îÏùº Î∞úÏÜ° Îç∞Ïù¥ÌÑ∞:', emailData);
            await new Promise(resolve => setTimeout(resolve, 2000));

            // ÌôïÏù∏ÏÑú Î∞úÏÜ° ÌõÑ ÏÉÅÌÉú ÏóÖÎç∞Ïù¥Ìä∏: Í≤¨Ï†Å status, confirmed_at, ÏòàÏïΩ ÏÉÅÌÉúÎ•º 'confirmed'Î°ú ÎèôÍ∏∞Ìôî
            try {
                // id/quote_id ÏñëÏ™Ω ÏßÄÏõê
                await supabase.from('quote').update({ status: 'confirmed', confirmed_at: new Date().toISOString() }).or(`quote_id.eq.${quoteData.quote_id},id.eq.${quoteData.quote_id}`);
                await supabase.from('reservation').update({ re_status: 'confirmed' }).eq('re_quote_id', quoteData.quote_id);
                // (ÏÑ†ÌÉù) Î∞úÏÜ° Î°úÍ∑∏ Í∏∞Î°ù
                try {
                    await supabase.from('reservation_confirmation').insert({
                        quote_id: quoteData.quote_id,
                        method: 'email',
                        status: 'sent',
                        subject: `ÏòàÏïΩÌôïÏù∏ÏÑú: ${quoteData.title}`,
                        recipient_email: quoteData.user_email,
                        sent_at: new Date().toISOString(),
                        meta: {
                            generator: 'manager',
                            amount: quoteData.total_price,
                            services: quoteData.reservations.length
                        }
                    } as any);
                } catch (logErr) {
                    const errAny = logErr as any;
                    console.warn('Î∞úÏÜ° Î°úÍ∑∏ Í∏∞Î°ù Ïã§Ìå®(ÏÑ†ÌÉù):', errAny?.message || errAny);
                }
            } catch (e) {
                console.warn('ÌôïÏù∏ÏÑú Î∞úÏÜ° ÏÉÅÌÉú ÎèôÍ∏∞Ìôî Ïã§Ìå®:', e);
            }

            alert(`‚úÖ ${quoteData.user_email}Î°ú ÏòàÏïΩÌôïÏù∏ÏÑúÍ∞Ä ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Î∞úÏÜ°ÎêòÏóàÏäµÎãàÎã§.\n\nüìã Î∞úÏÜ° ÎÇ¥Ïö©:\n- ÏòàÏïΩÌôïÏù∏ÏÑú PDF Ï≤®Î∂Ä\n- Ïó¨Ìñâ Ï§ÄÎπÑÏÇ¨Ìï≠ ÏïàÎÇ¥\n- Í∏¥Í∏âÏó∞ÎùΩÏ≤ò Ï†ïÎ≥¥\n- Ï§ëÏöî Ï£ºÏùòÏÇ¨Ìï≠`);

        } catch (error) {
            console.error('Ïù¥Î©îÏùº Î∞úÏÜ° Ïã§Ìå®:', error);
            alert('‚ùå Ïù¥Î©îÏùº Î∞úÏÜ°Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.\n\nÎã§Ïãú ÏãúÎèÑÌïòÍ±∞ÎÇò Í≥†Í∞ùÏÑºÌÑ∞Î°ú Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.');
        } finally {
            setEmailSending(false);
        }
    };

    const getServiceTypeName = (type: string) => {
        const typeNames = {
            cruise: 'ÌÅ¨Î£®Ï¶à',
            cruise_car: 'ÌÅ¨Î£®Ï¶à Ï∞®Îüâ',
            airport: 'Í≥µÌï≠ ÏÑúÎπÑÏä§',
            hotel: 'Ìò∏ÌÖî',
            rentcar: 'Î†åÌÑ∞Ïπ¥',
            tour: 'Ìà¨Ïñ¥',
            car: 'Ï∞®Îüâ ÏÑúÎπÑÏä§'
        };
        return typeNames[type as keyof typeof typeNames] || type;
    };

    const formatDate = (dateString: string) => {
        return new Date(dateString).toLocaleDateString('ko-KR', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    };

    const formatDateTime = (dateString: string) => {
        return new Date(dateString).toLocaleDateString('ko-KR', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    };

    if (loading) {
        return (
            <ManagerLayout title="ÏòàÏïΩÌôïÏù∏ÏÑú ÏÉùÏÑ±" activeTab="confirmation">
                <div className="flex justify-center items-center h-64">
                    <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
                    <p className="ml-4 text-gray-600">Îç∞Ïù¥ÌÑ∞Î•º Î∂àÎü¨Ïò§Îäî Ï§ë...</p>
                </div>
            </ManagerLayout>
        );
    }

    if (!quoteData) {
        return (
            <ManagerLayout title="ÏòàÏïΩÌôïÏù∏ÏÑú ÏÉùÏÑ±" activeTab="confirmation">
                <div className="text-center py-12">
                    <div className="text-4xl mb-4">‚ùå</div>
                    <h3 className="text-lg font-medium text-gray-900 mb-2">Í≤¨Ï†ÅÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§</h3>
                    <button
                        onClick={() => router.back()}
                        className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                    >
                        ÎèåÏïÑÍ∞ÄÍ∏∞
                    </button>
                </div>
            </ManagerLayout>
        );
    }

    return (
        <ManagerLayout title="ÏòàÏïΩÌôïÏù∏ÏÑú ÏÉùÏÑ±" activeTab="confirmation">
            <div className="space-y-6">


                {/* ÏòàÏïΩÌôïÏù∏ÏÑú ÎØ∏Î¶¨Î≥¥Í∏∞ */}
                <div className="bg-white rounded-lg shadow-sm">
                    <div id="confirmation-letter" className="p-8" style={{ fontFamily: 'Arial, sans-serif' }}>
                        {/* Ìó§Îçî ÏÇ≠Ï†úÎê® - Ï§ëÎ≥µ ÏòàÏïΩ Ï†ïÎ≥¥ Ï†úÍ±∞ */}

                        {/* Í≥†Í∞ù Î∞è ÏòàÏïΩ Ï†ïÎ≥¥ Ìëú */}
                        <div className="mb-8">
                            <table className="w-full border border-gray-300">
                                <tbody>
                                    <tr className="bg-blue-50 text-center">
                                        <td className="border border-gray-300 px-4 py-3 font-semibold text-gray-700 w-1/4">ÏòàÏïΩÏûê Ï†ïÎ≥¥</td>
                                        <td className="border border-gray-300 px-4 py-3 font-semibold text-gray-700 w-1/4">Ïó∞ÎùΩÏ≤ò Ï†ïÎ≥¥</td>
                                        <td className="border border-gray-300 px-4 py-3 font-semibold text-gray-700 w-1/4">ÏòàÏïΩ Í∏∞Î≥∏Ï†ïÎ≥¥</td>
                                        <td className="border border-gray-300 px-4 py-3 font-semibold text-gray-700 w-1/4">Í≤∞Ï†ú Ï†ïÎ≥¥</td>
                                    </tr>
                                    <tr>
                                        <td className="border border-gray-300 px-1 py-3 align-top">
                                            <div className="space-y-2">
                                                <div><span className="text-gray-500 text-sm">ÏÑ±Î™Ö:</span><span className="font-semibold text-blue-600">{quoteData.user_name}</span></div>
                                                <div><span className="text-gray-500 text-sm">üìß Ïù¥Î©îÏùº:</span><span className="text-sm text-blue-600">{quoteData.user_email}</span></div>
                                                <div><span className="text-gray-500 text-sm">üìû Ïó∞ÎùΩÏ≤ò:</span><span className="text-sm text-blue-600">{quoteData.user_phone}</span></div>
                                            </div>
                                        </td>
                                        <td className="border border-gray-300 px-4 py-3 align-top">
                                            <div className="space-y-2">

                                            </div>
                                        </td>
                                        <td className="border border-gray-300 px-4 py-3 align-top">
                                            <div className="space-y-2">
                                                <div><span className="text-gray-500 text-sm">ÏòàÏïΩÎ≤àÌò∏:</span><span className="font-mono text-sm text-blue-600">{quoteData.quote_id}</span></div>
                                                <div><span className="text-gray-500 text-sm">ÏòàÏïΩÎ™Ö:</span><span className="font-medium text-sm text-blue-600">{quoteData.title}</span></div>
                                                <div><span className="text-gray-500 text-sm">ÏòàÏïΩÏùº:</span><span className="text-sm text-blue-600">{formatDate(quoteData.created_at)}</span></div>
                                            </div>
                                        </td>
                                        <td className="border border-gray-300 px-4 py-3 align-top">
                                            <div className="space-y-2">
                                                <div><span className="text-gray-500 text-sm">Í≤∞Ï†úÏÉÅÌÉú:</span><span className="inline-block px-2 py-1 bg-green-100 text-blue-600 text-xs font-medium rounded">‚úÖ Í≤∞Ï†úÏôÑÎ£å</span></div>
                                                <div><span className="text-gray-500 text-sm">Ï¥ù Í∏àÏï°:</span><span className="text-lg font-bold text-blue-600">{quoteData.total_price.toLocaleString()}Îèô</span></div>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        {/* ÏòàÏïΩ ÏÑúÎπÑÏä§ ÏÉÅÏÑ∏ Ìëú */}
                        <div className="mb-8">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <span className="w-1 h-6 bg-blue-600 mr-3"></span>
                                ÏòàÏïΩ ÏÑúÎπÑÏä§ ÏÉÅÏÑ∏ ÎÇ¥Ïó≠
                            </h3>
                            <table className="w-full border border-gray-300">
                                <thead>
                                    <tr className="bg-gray-100">
                                        <th className="border border-gray-300 px-3 py-3 text-center text-sm font-semibold text-gray-700">No.</th>
                                        <th className="border border-gray-300 px-3 py-3 text-center text-sm font-semibold text-gray-700">ÏÑúÎπÑÏä§ Ï¢ÖÎ•ò</th>
                                        <th className="border border-gray-300 px-3 py-3 text-center text-sm font-semibold text-gray-700">ÏÉÅÏÑ∏ Ï†ïÎ≥¥</th>
                                        <th className="border border-gray-300 px-3 py-3 text-center text-sm font-semibold text-gray-700">Í∏àÏï°</th>
                                        <th className="border border-gray-300 px-3 py-3 text-center text-sm font-semibold text-gray-700">ÏÉÅÌÉú</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {quoteData.reservations.map((reservation, index) => (
                                        <tr key={reservation.reservation_id} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
                                            <td className="border border-gray-300 px-3 py-4 text-center font-medium text-blue-600">
                                                {index + 1}
                                            </td>
                                            <td className="border border-gray-300 px-3 py-4">
                                                <div className="font-semibold text-blue-600 mb-1">
                                                    {getServiceName(reservation.service_type)}
                                                </div>
                                                <div className="text-xs text-blue-600 font-mono">
                                                    ID: {reservation.reservation_id.slice(-8)}
                                                </div>
                                            </td>
                                            <td className="border border-gray-300 px-3 py-4">
                                                {reservation.service_type === 'cruise' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Í∞ùÏã§ Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).room_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Î£∏ Ïä§ÏºÄÏ§Ñ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.schedule || 'Ï†ïÎ≥¥ ÏóÜÏùå'}</span></div>
                                                                <div><span className="text-gray-500">Î£∏ Ïπ¥ÌÖåÍ≥†Î¶¨:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.room_category || 'Ï†ïÎ≥¥ ÏóÜÏùå'}</span></div>
                                                                <div><span className="text-gray-500">ÌÅ¨Î£®Ï¶à:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.cruise || 'Ï†ïÎ≥¥ ÏóÜÏùå'}</span></div>
                                                                <div><span className="text-gray-500">Î£∏ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.room_type || 'Ï†ïÎ≥¥ ÏóÜÏùå'}</span></div>
                                                                <div><span className="text-gray-500">Îã®Í∞Ä:</span> <span className="font-medium text-green-600">{(reservation.service_details as any).price_info.price?.toLocaleString() || 0}Îèô</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">Ìà¨ÏàôÍ∞ù Ïàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).guest_count}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">Ï≤¥ÌÅ¨Ïù∏:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).checkin ? new Date((reservation.service_details as any).checkin).toLocaleDateString('ko-KR') : 'ÎØ∏Ï†ï'}</span></div>
                                                        <div><span className="text-gray-500">Ï¥ù Í∏àÏï°:</span> <span className="font-bold text-green-600">{(reservation.service_details as any).room_total_price?.toLocaleString() || 0}Îèô</span></div>
                                                        {(reservation.service_details as any).boarding_code && <div><span className="text-gray-500">ÌÉëÏäπ ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).boarding_code}</span></div>}
                                                        {(reservation.service_details as any).boarding_assist && <div><span className="text-gray-500">ÌÉëÏäπ ÏßÄÏõê:</span> <span className="font-medium text-blue-600">Ïòà</span></div>}
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'cruise_car' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Ï∞®Îüâ Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).car_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Ï∞®Îüâ Ïπ¥ÌÖåÍ≥†Î¶¨:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.car_category || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ï∞®Îüâ Í≤ΩÎ°ú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.car_route || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ï∞®Îüâ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.car_type || '-'}</span></div>
                                                                <div><span className="text-gray-500">ÌÅ¨Î£®Ï¶à:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.cruise || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ïä§ÏºÄÏ§Ñ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.schedule || '-'}</span></div>
                                                                <div><span className="text-gray-500">Îã®Í∞Ä:</span> <span className="font-medium text-green-600">{(reservation.service_details as any).price_info.price?.toLocaleString() || 0}Îèô</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">ÌîΩÏóÖÏùºÏãú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_datetime || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÏäπÍ∞ùÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).passenger_count || 0}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">Ï∞®ÎüâÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).car_count || 0}ÎåÄ</span></div>
                                                        <div><span className="text-gray-500">ÌîΩÏóÖÏû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_location || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÌïòÏ∞®Ïû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).dropoff_location || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ï¥ù Í∏àÏï°:</span> <span className="font-bold text-green-600">{(reservation.service_details as any).car_total_price?.toLocaleString() || 0}Îèô</span></div>
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'airport' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Í≥µÌï≠ Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).airport_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Í≥µÌï≠ Ïπ¥ÌÖåÍ≥†Î¶¨:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.airport_category || '-'}</span></div>
                                                                <div><span className="text-gray-500">Í≥µÌï≠ Í≤ΩÎ°ú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.airport_route || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ï∞®Îüâ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.airport_car_type || '-'}</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">Í≥µÌï≠:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_airport_location || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÏùºÏãú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_datetime || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ìï≠Í≥µÌé∏:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_flight_number || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ïù∏Ïõê:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_passenger_count || 0}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">Ï∞®ÎüâÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_car_count || 0}ÎåÄ</span></div>
                                                        <div><span className="text-gray-500">Ïßê Í∞úÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).ra_luggage_count || 0}Í∞ú</span></div>
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'hotel' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Ìò∏ÌÖî Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).hotel_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Ìò∏ÌÖîÎ™Ö:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.hotel_name || '-'}</span></div>
                                                                <div><span className="text-gray-500">Î£∏Î™Ö:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.room_name || '-'}</span></div>
                                                                <div><span className="text-gray-500">Î£∏ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.room_type || '-'}</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">Ï≤¥ÌÅ¨Ïù∏:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).checkin_date || '-'}</span></div>
                                                        <div><span className="text-gray-500">Í∞ùÏã§Ïàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).room_count || 0}Í∞ú</span></div>
                                                        <div><span className="text-gray-500">Ìà¨ÏàôÏù∏Ïõê:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).guest_count || 0}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">Ï°∞ÏãùÏÑúÎπÑÏä§:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).breakfast_service || '-'}</span></div>
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'rentcar' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Î†åÌÑ∞Ïπ¥ Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).rentcar_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Î†åÌÑ∞Ïπ¥ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.rent_type || '-'}</span></div>
                                                                <div><span className="text-gray-500">Î†åÌÑ∞Ïπ¥ Ïπ¥ÌÖåÍ≥†Î¶¨:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.rent_category || '-'}</span></div>
                                                                <div><span className="text-gray-500">Î†åÌÑ∞Ïπ¥ Í≤ΩÎ°ú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.rent_route || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ï∞®Îüâ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.rent_car_type || '-'}</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">ÌîΩÏóÖÏùºÏãú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_datetime || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÌîΩÏóÖÏû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_location || '-'}</span></div>
                                                        <div><span className="text-gray-500">Î™©Ï†ÅÏßÄ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).destination || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ï∞®ÎüâÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).car_count || (reservation.service_details as any).rentcar_count || 0}ÎåÄ</span></div>
                                                        <div><span className="text-gray-500">ÏäπÍ∞ùÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).passenger_count || 0}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">Í≤ΩÏú†ÏßÄ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).via_location || 'ÏóÜÏùå'}</span></div>
                                                        <div><span className="text-gray-500">Ïßê Í∞úÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).luggage_count || 0}Í∞ú</span></div>
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'tour' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Ìà¨Ïñ¥ Í∞ÄÍ≤© ÏΩîÎìú:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).tour_price_code || '-'}</span></div>
                                                        {(reservation.service_details as any).price_info && (
                                                            <>
                                                                <div><span className="text-gray-500">Ìà¨Ïñ¥Î™Ö:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.tour_name || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ìà¨Ïñ¥ ÌÉÄÏûÖ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.tour_type || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ìà¨Ïñ¥ Ï∞®Îüâ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.tour_vehicle || '-'}</span></div>
                                                                <div><span className="text-gray-500">Ìà¨Ïñ¥ Ï†ïÏõê:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).price_info.tour_capacity || 0}Î™Ö</span></div>
                                                            </>
                                                        )}
                                                        <div><span className="text-gray-500">Ìà¨Ïñ¥Ïùº:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).usage_date || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ìà¨Ïñ¥ Ïù∏Ïõê:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).tour_capacity || 0}Î™Ö</span></div>
                                                        <div><span className="text-gray-500">ÌîΩÏóÖÏû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_location || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÌïòÏ∞®Ïû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).dropoff_location || '-'}</span></div>
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {reservation.service_type === 'sht' && reservation.service_details && (
                                                    <div className="space-y-1 text-sm">
                                                        <div><span className="text-gray-500">Ï∞®ÎüâÎ≤àÌò∏:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).vehicle_number || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ï¢åÏÑùÏàò:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).seat_number || 0}ÏÑù</span></div>
                                                        <div><span className="text-gray-500">Ïπ¥ÌÖåÍ≥†Î¶¨:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).sht_category || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ïù¥Ïö©Ïùº:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).usage_date || '-'}</span></div>
                                                        <div><span className="text-gray-500">ÏÉâÏÉÅÎùºÎ≤®:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).color_label || '-'}</span></div>
                                                        <div><span className="text-gray-500">Ï¥ù Í∏àÏï°:</span> <span className="font-bold text-green-600">{(reservation.service_details as any).total_price?.toLocaleString() || 0}Îèô</span></div>
                                                        {(reservation.service_details as any).driver_info && <div><span className="text-gray-500">Í∏∞ÏÇ¨ Ï†ïÎ≥¥:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).driver_info}</span></div>}
                                                        {(reservation.service_details as any).pickup_location && <div><span className="text-gray-500">ÌîΩÏóÖ Ïû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).pickup_location}</span></div>}
                                                        {(reservation.service_details as any).dropoff_location && <div><span className="text-gray-500">ÌïòÏ∞® Ïû•ÏÜå:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).dropoff_location}</span></div>}
                                                        {(reservation.service_details as any).service_time && <div><span className="text-gray-500">ÏÑúÎπÑÏä§ ÏãúÍ∞Ñ:</span> <span className="font-medium text-blue-600">{(reservation.service_details as any).service_time}</span></div>}
                                                        {(reservation.service_details as any).request_note && (
                                                            <div><span className="text-gray-500">ÏöîÏ≤≠ÏÇ¨Ìï≠:</span> <span className="text-xs text-blue-600">{(reservation.service_details as any).request_note}</span></div>
                                                        )}
                                                    </div>
                                                )}
                                                {!reservation.service_details && (
                                                    <div className="text-sm text-gray-400">ÏÉÅÏÑ∏ Ï†ïÎ≥¥Í∞Ä ÏóÜÏäµÎãàÎã§</div>
                                                )}
                                            </td>
                                            <td className="border border-gray-300 px-3 py-4 text-center">
                                                <div className="text-lg font-bold text-blue-600">
                                                    {reservation.amount.toLocaleString()}Îèô
                                                </div>
                                            </td>
                                            <td className="border border-gray-300 px-3 py-4 text-center">
                                                <span className={`inline-block px-2 py-1 text-xs font-medium rounded ${reservation.status === 'confirmed' ? 'bg-green-100 text-blue-600' :
                                                    reservation.status === 'pending' ? 'bg-yellow-100 text-blue-600' :
                                                        'bg-gray-100 text-blue-600'
                                                    }`}>
                                                    {reservation.status === 'confirmed' ? 'ÌôïÏ†ï' :
                                                        reservation.status === 'pending' ? 'ÎåÄÍ∏∞' : reservation.status}
                                                </span>
                                            </td>
                                        </tr>
                                    ))}
                                </tbody>
                                <tfoot>
                                    <tr className="bg-blue-50">
                                        <td colSpan={3} className="border border-gray-300 px-3 py-4 text-right font-semibold text-gray-700">
                                            Ï¥ù Í≤∞Ï†ú Í∏àÏï°
                                        </td>
                                        <td className="border border-gray-300 px-3 py-4 text-center">
                                            <div className="text-xl font-bold text-blue-600">
                                                {quoteData.total_price.toLocaleString()}Îèô
                                            </div>
                                        </td>
                                        <td className="border border-gray-300 px-3 py-4 text-center">
                                            <span className="inline-block px-2 py-1 bg-green-100 text-green-800 text-xs font-medium rounded">
                                                Í≤∞Ï†úÏôÑÎ£å
                                            </span>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        {/* Ïó¨Ìñâ ÏùºÏ†ï Î∞è Ï§ëÏöî ÏïàÎÇ¥ÏÇ¨Ìï≠ */}
                        <div className="mb-8">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <span className="w-1 h-6 bg-orange-500 mr-3"></span>
                                Ïó¨Ìñâ Ï§ÄÎπÑÏÇ¨Ìï≠ Î∞è Ï§ëÏöî ÏïàÎÇ¥
                            </h3>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                    <h4 className="font-semibold text-blue-800 mb-3 flex items-center">
                                        <span className="mr-2">üìã</span>Ïó¨Ìñâ Ï§ÄÎπÑÎ¨º
                                    </h4>
                                    <ul className="text-sm text-blue-700 space-y-1">
                                        <li>‚Ä¢ Ïó¨Í∂å (Ïú†Ìö®Í∏∞Í∞Ñ 6Í∞úÏõî Ïù¥ÏÉÅ)</li>
                                        <li>‚Ä¢ Î≥∏ ÏòàÏïΩÌôïÏù∏ÏÑú Ï∂úÎ†•Î≥∏</li>
                                        <li>‚Ä¢ Ïó¨ÌñâÏûêÎ≥¥Ìóò Í∞ÄÏûÖ Í∂åÏû•</li>
                                        <li>‚Ä¢ Í∞úÏù∏ ÏÉÅÎπÑÏïΩ Î∞è ÏÑ∏Î©¥Ïö©Ìíà</li>
                                        <li>‚Ä¢ Ìé∏ÏïàÌïú Î≥µÏû• Î∞è Ïö¥ÎèôÌôî</li>
                                    </ul>
                                </div>
                                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                                    <h4 className="font-semibold text-yellow-800 mb-3 flex items-center">
                                        <span className="mr-2">‚ö†Ô∏è</span>Ï£ºÏùòÏÇ¨Ìï≠
                                    </h4>
                                    <ul className="text-sm text-yellow-700 space-y-1">
                                        <li>‚Ä¢ Ïó¨Ìñâ 3Ïùº Ï†ÑÍπåÏßÄ Î≥ÄÍ≤Ω/Ï∑®ÏÜå Í∞ÄÎä•</li>
                                        <li>‚Ä¢ ÎÇ†Ïî®Ïóê Îî∞Îùº ÏùºÏ†ï Î≥ÄÍ≤Ω Í∞ÄÎä•</li>
                                        <li>‚Ä¢ Ï∂úÎ∞ú 30Î∂Ñ Ï†Ñ ÏßëÍ≤∞ ÏôÑÎ£å</li>
                                        <li>‚Ä¢ ÏïàÏ†ÑÏàòÏπô Ï§ÄÏàò ÌïÑÏàò</li>
                                        <li>‚Ä¢ Í∑ÄÏ§ëÌíà Î∂ÑÏã§ Ï£ºÏùò</li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        {/* Í∏¥Í∏âÏó∞ÎùΩÏ≤ò Î∞è Í≥†Í∞ùÏÑºÌÑ∞ */}
                        <div className="bg-gray-50 border border-gray-200 rounded-lg p-6 mb-8">
                            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <span className="w-1 h-6 bg-red-500 mr-3"></span>
                                Í∏¥Í∏âÏó∞ÎùΩÏ≤ò Î∞è Í≥†Í∞ùÏßÄÏõê
                            </h3>
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <div className="text-center">
                                    <div className="text-2xl mb-2">üìû</div>
                                    <div className="font-semibold text-gray-700">Í≥†Í∞ùÏÑºÌÑ∞</div>
                                    <div className="text-sm text-gray-600">ÌèâÏùº 09:00-24:00</div>
                                    <div className="font-mono text-blue-600">07045545185</div>
                                </div>
                                <div className="text-center">
                                    <div className="text-2xl mb-2">üö®</div>
                                    <div className="font-semibold text-gray-700">24ÏãúÍ∞Ñ Í∏¥Í∏âÏó∞ÎùΩ</div>
                                    <div className="text-sm text-gray-600">Ïó¨Ìñâ Ï§ë ÏùëÍ∏âÏÉÅÌô©</div>
                                    <div className="font-mono text-red-600">07045545185</div>
                                </div>
                                <div className="text-center">
                                    <div className="text-2xl mb-2">üìß</div>
                                    <div className="font-semibold text-gray-700">Ïù¥Î©îÏùº Î¨∏Ïùò</div>
                                    <div className="text-sm text-gray-600">24ÏãúÍ∞Ñ Ï†ëÏàò</div>
                                    <div className="text-blue-600">stayhalong@gmail.com</div>
                                </div>
                            </div>
                        </div>

                        {/* Ìë∏ÌÑ∞ */}
                        <div className="text-center text-sm text-gray-500 border-t-2 border-blue-600 pt-6">
                            <div className="mb-4">
                                <div className="text-lg font-bold text-blue-600 mb-2">üåä Ïä§ÌÖåÏù¥ÌïòÎ°± Ìä∏Î†àÎ∏îÍ≥º Ìï®ÍªòÌïòÎäî ÌäπÎ≥ÑÌïú Ïó¨Ìñâ üåä</div>
                                <p className="text-gray-600">Î≤†Ìä∏ÎÇ® ÌïòÎ°±Î≤†Ïù¥ÏóêÏÑú ÏûäÏßÄ Î™ªÌï† Ï∂îÏñµÏùÑ ÎßåÎì§Ïñ¥Î≥¥ÏÑ∏Ïöî!</p>
                            </div>
                            <div className="bg-blue-50 rounded-lg p-4 text-center">
                                <div className="font-medium text-gray-700 mb-2">
                                    <span className="text-blue-600">üè¢ Ïä§ÌÖåÏù¥ÌïòÎ°± Ìä∏Î†àÎ∏î </span> |
                                    <span className="text-gray-600"> ÌïòÎ°±Î≤†Ïù¥ ÏÉÅÏ£º ÌïúÍµ≠Ïù∏ Î≤†Ìä∏ÎÇ® Ï†ÑÎ¨∏ Ïó¨ÌñâÏÇ¨</span>
                                </div>
                                <div className="text-xs text-gray-500 space-y-1">
                                    <div>üìç ÏÉÅÌò∏ : CONG TY TENPER COMMUNICATIONS</div>
                                    <div>üìç Ï£ºÏÜå : PHUONG YET KIEU, THANH PHO HA LONG</div>
                                    <div>üìß stayhalong@gmail.com | ‚òéÔ∏è 07045545185 üåê https://cafe.naver.com/stayhalong</div>
                                    <div>üïí Ïö¥ÏòÅÏãúÍ∞Ñ: ÌèâÏùº 09:00-24:00 (ÌÜ†ÏöîÏùº 09:00-15:00, ÏùºÏöîÏùº/Í≥µÌú¥Ïùº ÎπÑÏÉÅÏóÖÎ¨¥)</div>
                                    <div className="text-gray-400 mt-2">¬© 2024 StayHalong Travel. All rights reserved.</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </ManagerLayout>
    );
}
