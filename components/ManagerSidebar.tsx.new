"use client";
import React from 'react';
import Link from 'next/link';

interface ManagerSidebarProps {
    activeTab?: string;
    userEmail?: string;
    onLogout?: () => void;
}

export default function ManagerSidebar({ activeTab, userEmail, onLogout }: ManagerSidebarProps) {
    return (
        <aside className="h-full w-40 shrink-0 bg-white border-r border-gray-200 flex flex-col">
            <div className="h-16 px-4 flex items-center border-b border-gray-200 bg-blue-50">
                <div className="flex items-center space-x-2">
                    <div className="w-10 h-10 bg-blue-600 text-white rounded-full flex items-center justify-center font-bold">M</div>
                    <div>
                        <p className="text-sm font-semibold">Îß§ÎãàÏ†Ä</p>
                        <p className="text-xs text-blue-600 font-bold">StayHalong</p>
                    </div>
                </div>
            </div>
            <nav className="flex-1 overflow-y-auto py-3">
                <ul className="space-y-1 px-2">
                    {/* Í≤¨Ï†Å Í¥ÄÎ¶¨ */}
                    <li>
                        <Link
                            href="/manager/quotes"
                            className={`group flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === 'quotes'
                                ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                                }`}
                        >
                            <span className="text-base w-5 text-center">üìã</span>
                            <span className="truncate">Í≤¨Ï†Å Í¥ÄÎ¶¨</span>
                        </Link>
                    </li>
                    
                    {/* ÏòàÏïΩ Ï°∞Ìöå Í∑∏Î£π */}
                    <li className="pt-3">
                        <div className="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                            ÏòàÏïΩ Ï°∞Ìöå
                        </div>
                    </li>
                    {[
                        { id: 'reservations', label: 'ÏòàÏïΩ Í≥†Í∞ùÎ≥Ñ', path: '/manager/reservations', icon: 'üé´' },
                        { id: 'service-tables', label: 'ÏòàÏïΩ Ï¢ÖÎ•òÎ≥Ñ', path: '/manager/service-tables', icon: 'üîç' },
                        { id: 'reservation-details', label: 'ÏòàÏïΩÏùº Î≥Ñ', path: '/manager/reservation-details', icon: 'üìù' },
                    ].map(tab => (
                        <li key={tab.id}>
                            <Link
                                href={tab.path}
                                className={`group flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === tab.id
                                    ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                                    }`}
                            >
                                <span className="text-base w-5 text-center">{tab.icon}</span>
                                <span className="truncate">{tab.label}</span>
                            </Link>
                        </li>
                    ))}
                    
                    {/* ÏòàÏïΩ ÏàòÏ†ï Í∑∏Î£π */}
                    <li className="pt-3">
                        <div className="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                            ÏòàÏïΩ ÏàòÏ†ï
                        </div>
                    </li>
                    {[
                        { id: 'reservation-edit', label: 'ÏòàÏïΩ ÏàòÏ†ï', path: '/manager/reservation-edit', icon: '‚úèÔ∏è' },
                        { id: 'reservations-bulk', label: 'ÏòàÏïΩ Ï≤òÎ¶¨', path: '/manager/reservations/bulk', icon: 'üóÇÔ∏è' },
                        { id: 'schedule', label: 'ÏòàÏïΩ ÏùºÏ†ï', path: '/manager/schedule', icon: 'üìÖ' },
                    ].map(tab => (
                        <li key={tab.id}>
                            <Link
                                href={tab.path}
                                className={`group flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === tab.id
                                    ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                                    }`}
                            >
                                <span className="text-base w-5 text-center">{tab.icon}</span>
                                <span className="truncate">{tab.label}</span>
                            </Link>
                        </li>
                    ))}

                    {/* Í≤∞Ï†ú Í¥ÄÎ†® Í∑∏Î£π */}
                    <li className="pt-3">
                        <div className="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                            Í≤∞Ï†ú Í¥ÄÎ†®
                        </div>
                    </li>
                    {[
                        { id: 'payment-processing', label: 'ÏòàÏïΩ Í≤∞Ï†ú', path: '/manager/payment-processing', icon: 'üìù' },
                        { id: 'payments', label: 'Í≤∞Ï†ú ÌòÑÌô©', path: '/manager/payments', icon: 'üí≥' },
                        { id: 'confirmation', label: 'ÏòàÏïΩ ÌôïÏù∏ÏÑú', path: '/manager/confirmation', icon: 'üìÑ' },
                    ].map(tab => (
                        <li key={tab.id}>
                            <Link
                                href={tab.path}
                                className={`group flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === tab.id
                                    ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                                    }`}
                            >
                                <span className="text-base w-5 text-center">{tab.icon}</span>
                                <span className="truncate">{tab.label}</span>
                            </Link>
                        </li>
                    ))}
                    
                    {/* Í¥ÄÎ¶¨ ÎèÑÍµ¨ Í∑∏Î£π */}
                    <li className="pt-3">
                        <div className="px-3 py-1 text-xs font-semibold text-gray-500 uppercase tracking-wider">
                            Í¥ÄÎ¶¨ ÎèÑÍµ¨
                        </div>
                    </li>
                    {[
                        { id: 'notifications', label: 'ÏïåÎ¶º Í¥ÄÎ¶¨', path: '/manager/notifications', icon: 'üîî' },
                        { id: 'dashboard', label: 'ÎåÄÏãú Î≥¥Îìú', path: '/manager/dashboard', icon: 'üè†' },
                        { id: 'analytics', label: 'Î∂ÑÏÑù Î≥¥Í∏∞', path: '/manager/analytics', icon: 'üìä' },
                        { id: 'customers', label: 'Í≥†Í∞ù Í¥ÄÎ¶¨', path: '/manager/customers', icon: 'üë•' },
                    ].map(tab => (
                        <li key={tab.id}>
                            <Link
                                href={tab.path}
                                className={`group flex items-center gap-2 px-3 py-2 rounded-md text-sm font-medium transition-colors ${activeTab === tab.id
                                    ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                    : 'text-gray-600 hover:text-gray-900 hover:bg-gray-50'
                                    }`}
                            >
                                <span className="text-base w-5 text-center">{tab.icon}</span>
                                <span className="truncate">{tab.label}</span>
                            </Link>
                        </li>
                    ))}
                </ul>
            </nav>
            <div className="border-t border-gray-200 p-3 space-y-2">
                {userEmail && <div className="text-xs text-gray-500 break-all">{userEmail}</div>}
                <div className="flex gap-2">
                    <Link href="/" className="flex-1 text-xs px-2 py-2 rounded bg-gray-100 hover:bg-gray-200 text-gray-700 text-center">Î©îÏù∏</Link>
                    <button onClick={onLogout} className="flex-1 text-xs px-2 py-2 rounded bg-red-100 hover:bg-red-200 text-red-600">Î°úÍ∑∏ÏïÑÏõÉ</button>
                </div>
            </div>
        </aside>
    );
}
